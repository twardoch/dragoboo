#!/bin/bash
# this_file: /root/repo/scripts/version.sh

# Version extraction script for Dragoboo
# Extracts version information from git tags and generates Version.swift

set -e

# Default values
DEFAULT_VERSION="1.0.0"
DEFAULT_COMMIT="unknown"
DEFAULT_BUILD_DATE="unknown"
DEFAULT_IS_DEV="true"

# Output file
VERSION_FILE="Sources/DragobooCore/Version.swift"

# Function to get git tag version
get_git_version() {
    # Try to get the latest tag
    if git describe --tags --exact-match HEAD 2>/dev/null; then
        # We're on a tagged commit
        echo "false"
        return
    fi
    
    # Try to get the latest tag with distance
    if git describe --tags --abbrev=0 HEAD 2>/dev/null; then
        echo "true"
        return
    fi
    
    # No tags found
    echo "$DEFAULT_VERSION"
}

# Function to get commit hash
get_commit_hash() {
    if git rev-parse HEAD 2>/dev/null; then
        return
    fi
    echo "$DEFAULT_COMMIT"
}

# Function to get build date
get_build_date() {
    date -u +"%Y-%m-%d %H:%M:%S UTC"
}

# Function to check if this is a development build
is_development_build() {
    # Check if we're on a tagged commit
    if git describe --tags --exact-match HEAD 2>/dev/null >/dev/null; then
        echo "false"
    else
        echo "true"
    fi
}

# Main execution
echo "Generating version information..."

# Get version information
if command -v git >/dev/null 2>&1 && git rev-parse --git-dir >/dev/null 2>&1; then
    # We're in a git repository
    VERSION=$(get_git_version)
    if [ "$VERSION" = "true" ] || [ "$VERSION" = "false" ]; then
        IS_DEV="$VERSION"
        VERSION=$(git describe --tags --abbrev=0 HEAD 2>/dev/null || echo "$DEFAULT_VERSION")
        # Clean up version string (remove 'v' prefix if present)
        VERSION=$(echo "$VERSION" | sed 's/^v//')
    else
        IS_DEV="true"
    fi
    
    COMMIT=$(get_commit_hash)
    BUILD_DATE=$(get_build_date)
    IS_DEV=$(is_development_build)
else
    # Not in git repository or git not available
    VERSION="$DEFAULT_VERSION"
    COMMIT="$DEFAULT_COMMIT"
    BUILD_DATE="$DEFAULT_BUILD_DATE"
    IS_DEV="$DEFAULT_IS_DEV"
fi

# Create the version file
cat > "$VERSION_FILE" << EOF
// this_file: /root/repo/Sources/DragobooCore/Version.swift
// Generated by scripts/version.sh - DO NOT EDIT MANUALLY

import Foundation

/// Version information for Dragoboo
public struct Version {
    /// The semantic version string (e.g., "1.0.0")
    public let semver: String
    
    /// The git commit hash
    public let commit: String
    
    /// The build date
    public let buildDate: String
    
    /// Whether this is a development build
    public let isDevelopment: Bool
    
    /// Current version instance
    public static let current = Version(
        semver: VersionInfo.semver,
        commit: VersionInfo.commit,
        buildDate: VersionInfo.buildDate,
        isDevelopment: VersionInfo.isDevelopment
    )
    
    /// Full version string including build info
    public var fullVersion: String {
        if isDevelopment {
            return "\(semver)-dev+\(commit.prefix(7))"
        } else {
            return semver
        }
    }
    
    /// Version info for display
    public var displayString: String {
        return "v\(fullVersion) (\(buildDate))"
    }
}

/// Internal version info that gets populated by build scripts
internal struct VersionInfo {
    static let semver = "$VERSION"
    static let commit = "$COMMIT"
    static let buildDate = "$BUILD_DATE"
    static let isDevelopment = $IS_DEV
}
EOF

echo "Version file generated: $VERSION_FILE"
echo "Version: $VERSION"
echo "Commit: $COMMIT"
echo "Build Date: $BUILD_DATE"
echo "Is Development: $IS_DEV"